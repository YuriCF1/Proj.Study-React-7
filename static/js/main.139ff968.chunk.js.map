{"version":3,"sources":["hooks/useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","useFetch","url","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","config","setConfig","_useState5","_useState6","setMethod","_useState7","_useState8","callFetch","setCallFetch","_useState9","_useState10","loading","setLoading","_useState11","_useState12","setError","_useState13","_useState14","itemId","setItemId","useEffect","_ref","asyncToGenerator","_callee","res","inJson","_context","fetch","json","t0","console","log","message","apply","arguments","fetchData","_ref2","_callee2","fetchOptions","deleteUrl","_res","_context2","concat","httpRequest","httpConfig","headers","Content-type","body","JSON","stringify","App_regeneratorRuntime","App","_useFetch","items","setName","price","setPrice","handleSubmit","e","preventDefault","_x","react_default","a","createElement","className","map","product","id","style","marginLeft","onClick","onSubmit","onChange","target","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.139ff968.chunk.js","sourcesContent":["// FAZENDO A ESTRUTURA DO FETCH REUTILIZÁVEL\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//Aula 7 - Custom hook\r\nexport const useFetch = (url) => {\r\n  const [data, setData] = useState(null); //Já que não sabe o que é ainda, é 'null'. Nem string, nem array\r\n\r\n  // Aula 8 - Refatorando o post\r\n  const [config, setConfig] = useState(null); //Responsável para configurar o método, cabeçalhos...\r\n  const [method, setMethod] = useState(null); //Responsável para configurar o método, GET ou POST\r\n  const [callFetch, setCallFetch] = useState(false); //Dizer quando o fetch for alterado. Usado como dependência\r\n\r\n  // Aula 9 - Loading\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Aula 10 - Tratando erro\r\n  const [error, setError] = useState(null);\r\n\r\n  // Aula 11 - DESAFIO\r\n  const [itemId, setItemId] = useState(null);\r\n\r\n  // ___________________________________________________________________________________Configuração____________________________________________________________\r\n  const httpConfig = (data, method) => {\r\n    if (method === \"POST\") {\r\n      setConfig({\r\n        method, //Já que o método já é o post, não precisa fazer 'method: 'POST''. Assimila o valor naturalmente\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      setMethod(method);\r\n\r\n      // Aula 11 - DESAFIO\r\n    } else if (method === \"DELETE\") {\r\n      setConfig({\r\n        method,\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      }); //O DELETE NÂO POSSUI BODY, POIS NÃO HÁ DADOS\r\n\r\n      setMethod(method);\r\n      setItemId(data);\r\n    }\r\n  };\r\n\r\n  // _____________________________________________________________________________________Fetch__________________________________________________________\r\n  // GET QUANDO O POST FOR CONCLUÍDO\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // Aula 9 - loading\r\n      setLoading(true);\r\n\r\n      try {\r\n        const res = await fetch(url);\r\n        const inJson = await res.json();\r\n\r\n        setData(inJson);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error.message); //Mostrar a mensagem de erro\r\n        setError(\"Houve algum erro na tentativa de carregamento dos dados\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url, callFetch]);\r\n\r\n  // ______________________________________________________________________________Requerimento_________________________________________________________________\r\n  //Aula 8 - Refatorando o post\r\n  useEffect(() => {\r\n    const httpRequest = async () => {\r\n      let json;\r\n\r\n      if (method === \"POST\") {\r\n        let fetchOptions = [url, config]; //Pode pegar uma url diferente e uma configuração diferente        const res = await fetch(...fetchOptions);\r\n        const res = await fetch(...fetchOptions);\r\n        json = await res.json();\r\n\r\n        setCallFetch(json);\r\n      } else if (method === \"DELETE\") {\r\n        const deleteUrl = `${url}/${itemId}`;\r\n        const res = await fetch(deleteUrl, config);\r\n        json = await res.json();\r\n      }\r\n      setCallFetch(json);\r\n    };\r\n\r\n    httpRequest();\r\n  }, [config]);\r\n\r\n  // ______________________________________________________________________________Retorno_________________________________________________________________\r\n  //Só dá para exportar uma coisa nos hooks, por isso usa-se o retorno\r\n  return { data, httpConfig, loading, error }; // Já que o terceiro hook é dependente da configuração, só precisa exportar o primeiro. Caso o primeiro mude, o terceiro reinicia\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\n\nimport { useState, useEffect } from \"react\";\n\n// Aula 7 - Custom Hook\nimport { useFetch } from \"./hooks/useFetch\";\n\nconst url = \"http://localhost:3000/products\";\n\nfunction App() {\n  //Aula 1\n  const [products, setProducts] = useState([]);\n\n  // Método 2 - Custom Rook\n  //Aula 4 - Custom hook\n  const { data: items, httpConfig, loading, error } = useFetch(url); //Diz o que está esperando de retorno, e depois diz de onde tá vindo\n  // Renomeando a propriedade\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  // Método 1 - Rook nativo\n  //Resgatando dados\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const res = await fetch(url);\n\n  //     const data = await res.json();\n\n  //     setProducts(data);\n  //   }\n\n  //   fetchData();\n  // }, []); //Nao há nenhuma depedência específica aqui\n\n  // Aula 2 - Adição de produtos\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // // Como os states têm o mesmo nome da chave to objeto, não precis acolocar 'name = name'\n    const product = {\n      name,\n      price,\n    };\n\n    // const res = await fetch(url, { //Segundo parâmetro, diz como vai ser a requisição. O GET é padrão\n    //   method: \"POST\",\n    //   headers: { //Transmite na transmissão que tipo de conteúdo está sendo manipulado\n    //     \"Content-Type\": \"application/json\"\n    //   },\n    //   body: JSON.stringify(product) // Os dados sendo passados, porém o dado principal da requisição é JSON, por isso o dado precisa ir no mesmo formato\n    // })\n\n    // console.log(product);\n\n    // //Aula - 6 = Carregamento dinâmico\n    // const addedProduct  = await res.json() //Transformando o rest em um objeto. Pois anteriormente ele estava como string em json\n    // setProducts((prevProducts) => [...prevProducts, addedProduct])\n\n    httpConfig(product, \"POST\");\n\n    setName(\"\");\n    setPrice(\"\");\n  };\n\n  // Aula 11 - DESAFIO\n  const handleRemove = (id) => {\n    httpConfig(id, \"DELETE\");\n\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Lista de produtos</h1>\n      {/* Aula 9 - loading */}\n      {/* Substituir depois pela animação de carregamento? */}\n      {/* {loading && <p>Carregando os dados...</p>} */}\n      {/* <div>  */}\n      {(() => {\n        if (loading && !error) {\n          return <p>Carregando os dados...</p>;\n        } else {\n          return <p>{error}</p>;\n        }\n      })()}\n      {/* </div> */}\n      {/* {error && <p>{error}</p>} */}\n      {!error && (\n        <ul>\n          {/* {products.map((product) => ( */}\n          {items &&\n            items.map((\n              product //Inicialmente, o items é nulo, o if resolveu\n            ) => (\n              <li key={product.id}>\n                {product.name} - R$: {product.price}\n                {/* Quando tem que mandar alguma parâmetro na função do onClick, tem que ser por arrow function */}\n                <button style={{marginLeft: \"1em\"}} onClick={() => handleRemove(product.id)}> \n                  Deletar\n                </button>\n              </li>\n            ))}\n        </ul>\n      )}\n      <div className=\"add-product\">\n        <form onSubmit={handleSubmit}>\n          <label>\n            Nome:\n            <input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </label>\n          <label>\n            Preço:\n            <input\n              type=\"number\"\n              value={price}\n              name=\"price\"\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Criar\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}